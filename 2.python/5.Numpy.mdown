# Numpy 基础

> import numpy as np

## 构造ndarray
- np.array np.asarray 
- np.zeros np.zeros_like np.one np.one_like np.empty np.empty_like
- np.eye np.identity

## Numpy属性
- data.dtype
- data.shape
- data.ndim
- data.size
- data.itemsize

## 数据类型
- 整形 int8 uint8 int16 uint16 int32 uint32 int64 uint64
- 浮点型 float16 float32 float64 float128
- 复数	complex64 complex128 complex256
- bool
- object 
- string_
- unicode_
- **astype** 复制ndarray的数据库类型 a.astype(dtype) # 将b的数据类型复制给a

## 索引与切片
- 切片索引 索引结合切片
- bool索引	
- 花式索引 arr[[1,2,3]]， 和切片不一样，花式索引是会复制数据的(索引都会复制数据)
		   arr[[1,2,3], [0,1,2]]，选取arr中(1, 0), (2, 1), (3, 2)
```
import numpy as np
arr = np.arange(10)
arr_slice = arr[5:8]
print(arr)
print(arr_slice)
arr_slice[0] = 1234
print(arr_slice)
print(arr) # 和列表切片不一样，这里的切片只是原始数组的**视图**，任何对视图的修改都会直接反映到源数组上
```

## 数组转置&轴对换
- arr.T
- arr.transpose((1,2,3))
- arr.swapaxes(1,2)

```
import numpy as np
ar2 = np.array([[[1, 2], [3, 4], [5, 6]], [[7, 8], [9, 10], [11, 12]]])
ar2
ar2.T
ar2.transpose((0, 2, 1))
ar2.swapaxes((1, 2))
```

## Numpy数组运算
> arr1 = np.array(np.arange(10))

> arr2 = np.array(np.arange(1, 11))

1. 数组运算
- print(arr1 + arr2)
- print(arr1 ** 2)

2. bool索引
- print(arr1[arr1 == 2])

3. 多条件操作
- result = (arr1==2)|(arr1==3)
- print(result)
- print(arr1[result])

4. ufunc方法
- add subtract multiply devide floor_divide
- power square exp sqrt
- floor ceil rint
- sign modf copysign
- log 
- cos cosh sin sinh tan tanh arccos raccosh arcsin arcsinh arctan
- isnan isfinite is inf
- logical_and logical_or logical_xor
- greate greate_equal less less_equal equal not_equal 

5. meshgrid
a, b = np.meshgrid(np.arange(1, 5), np.arange(2, 4))

6. **np.where 三元表达式**
> x if condition else y
'''
arr1 = np.arange(5)
arr2 = np.arange(20, 25)
condition = np.array([0, 1, 0, 0, 1])
result = np.where(condition, arr1, arr2)
print(arr1)
print(arr2)
print(result)
'''

7. 数学统计方法
- sum mean std var
- min max argmin argmax 
- cumsum cumprod

8. 布尔数组的方法
- (arr > 0).sum()
- arr.any()
- arr.all()

9. 集合运算
- unique
- intersect1d
- union1d
- in1d
- setdiff1d
- setxor1d

8. 数据的读取和存储
- np.save()
- np.savez()
- np.load()
- np.loadtxt()
- np.savetxt()

9. 线性代数
- diag
- dot
- trace
- det
- eig
- inv
- pinv
- qr
- svd
- solve
- lstsq

10. 分布 
- seed
- permutation
- shuffle
- rand
- randint
- randn
- binomial
- beta
- chisquare
- gamma
- uniform

11. 其他函数
- sort unique 
- intersect1d(x, y)	union1d(x, y)	in1d(x, y)	setxor1d(x, y)
- reshape 行(第0轴)为-1则根据列自动匹配

12. ufunc运算、广播


# 参考文档
1. [python numpy基础 数组和矢量计算](http://python.jobbole.com/87352/)
2. [Numpy-快速处理数据-ufunc运算-广播](http://www.cnblogs.com/moon1992/p/4947475.html)
3. [Numpy Tutorial](https://docs.scipy.org/doc/numpy-dev/user/quickstart.html)