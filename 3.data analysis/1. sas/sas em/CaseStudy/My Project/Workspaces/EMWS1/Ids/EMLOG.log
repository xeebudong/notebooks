*------------------------------------------------------------*
用户:       hp
日期:       2019年08月25日
时间:       17时36分03秒
软件安装点: 12001462
平台:       X64_8PRO
维护版本:   9.04.01M2P072314
EM 版本:    13.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2019年08月25日" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17时36分00秒" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 训练日志";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 训练日志
日期:       2019年08月25日
时间:       17时36分00秒
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2KU7EEB "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2KU7EEB new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2019年08月25日" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17时36分00秒" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "用户:       hp";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "软件安装点: 12001462";
MPRINT(EM_DIAGRAM):   put "平台:       X64_8PRO";
MPRINT(EM_DIAGRAM):   put "维护版本:   9.04.01M2P072314";
MPRINT(EM_DIAGRAM):   put "EM 版本:    13.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2019年08月25日" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17时36分00秒" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "用户:       hp";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 训练输出";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 评分输出";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 报表输出";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
16970      proc freq data=EMWS1.Ids_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Ids_VariableSet noprint;
16971      table ROLE*LEVEL/out=WORK.IdsMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.IdsMETA;
16972      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_VARIABLESET. 读取了 13 个观测
NOTE: 数据集 WORK.IDSMETA 有 4 个观测和 4 个变量。
NOTE: “PROCEDURE FREQ”所用时间（总处理时间）:
      实际时间          0.01 秒
      CPU 时间          0.00 秒
 
 
16973      proc print data=WORK.IdsMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IdsMETA label noobs;
16974      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
16975      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "角色" LEVEL = "测度水平" COUNT = "频数计数";
16976      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
16977      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "变量汇总";
MPRINT(EM_DIAGRAM):   run;
16978      run;
 
NOTE: 从数据集 WORK.IDSMETA. 读取了 4 个观测
NOTE: PROCEDURE PRINT 已打印第 1 页。
NOTE: “PROCEDURE PRINT”所用时间（总处理时间）:
      实际时间          0.01 秒
      CPU 时间          0.01 秒
 
 
16979      title10;
MPRINT(EM_DIAGRAM):   title10;
16980      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16981      rc = libref("SAMPSIO");
MPRINT(EM_DIAGRAM):   rc = libref("SAMPSIO");
16982      call symput('_librc', strip(put(rc, best.)));
MPRINT(EM_DIAGRAM):   call symput('_librc', strip(put(rc, best.)));
16983      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
16984      %let _engineTable =;
16985      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16986      dsid = open("SAMPSIO.HMEQ");
MPRINT(EM_DIAGRAM):   dsid = open("SAMPSIO.HMEQ");
16987      if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
16988      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
16989      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
16990      end;
MPRINT(EM_DIAGRAM):   end;
16991      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
16992      %let _lasrFile=;
16993      %let _sasiolaFile=;
16994      data null_;
MPRINT(EM_DIAGRAM):    data null_;
16995      length lasrfile sasiolaFile $2000;
MPRINT(EM_DIAGRAM):   length lasrfile sasiolaFile $2000;
16996      LASRFile = pathname("EMWS1")!!"\"!!"HPDM\"!!"hpdmlasr";
MPRINT(EM_DIAGRAM):   LASRFile = pathname("EMWS1")!!"\"!!"HPDM\"!!"hpdmlasr";
16997      SASIOLAFile = pathname("EMWS1")!!"\"!!"HPDM\"!!'sasiola.sas';
MPRINT(EM_DIAGRAM):   SASIOLAFile = pathname("EMWS1")!!"\"!!"HPDM\"!!'sasiola.sas';
16998      call symput('_lasrFile', strip(lasrfile));
MPRINT(EM_DIAGRAM):   call symput('_lasrFile', strip(lasrfile));
16999      call symput('_sasiolaFile', strip(sasiolafile));
MPRINT(EM_DIAGRAM):   call symput('_sasiolaFile', strip(sasiolafile));
17000      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 数据集 WORK.NULL_ 有 1 个观测和 2 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
17001      %let _UseGrid = 0;
17002      %hpdm_performance(data=SAMPSIO.HMEQ, isGrid=_UseGrid);
MPRINT(EM_DIAGRAM):
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
17003      %put &_UseGrid;
0
17004      %let em_idskey =;
17005      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17006      set EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_VariableSet;
17007      where ROLE = 'KEY';
MPRINT(EM_DIAGRAM):   where ROLE = 'KEY';
17008      call symput('em_idskey', strip(tranwrd(name, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('em_idskey', strip(tranwrd(name, '"', '""')));
17009      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_VARIABLESET. 读取了 0 个观测
      WHERE ROLE='KEY';
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17010      %let emexceptionstring=;
17011      %EmAdviseColumns(SAMPSIO.HMEQ, adviseMode=BASIC, applyIntervalLevelLowerLimit=N, applyMaxPercentMissing=N, applyMaxClassLevels=N, identifyEmptyColumns=N, maxLevelDetection=0, outdata=EMWS1.Ids_EMCMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
 
17012      %let SYSCC = 0;
17013      %let _dsidTable = 0;
17014      %let _engineTable =;
17015      data _null_;
MPRINT(EMADVISECOLUMNS):    data _null_;
17016      dsid = open('SAMPSIO.HMEQ');
MPRINT(EMADVISECOLUMNS):   dsid = open('SAMPSIO.HMEQ');
17017      call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
17018      if dsid then do;
MPRINT(EMADVISECOLUMNS):   if dsid then do;
17019      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
17020      dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
17021      end;
MPRINT(EMADVISECOLUMNS):   end;
17022      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
17023      options fmterr;
MPRINT(EMADVISECOLUMNS):    options fmterr;
17024      data _metaTestView;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
17025      set SAMPSIO.HMEQ;
MPRINT(EMADVISECOLUMNS):   set SAMPSIO.HMEQ;
17026      if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
17027      output;
MPRINT(EMADVISECOLUMNS):   output;
17028      stop;
MPRINT(EMADVISECOLUMNS):   stop;
17029      end;
MPRINT(EMADVISECOLUMNS):   end;
17030      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 从数据集 SAMPSIO.HMEQ. 读取了 1 个观测
NOTE: 数据集 WORK._METATESTVIEW 有 1 个观测和 13 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17031      proc contents data=SAMPSIO.HMEQ
17032      out=WORK.M1OIXORQ noprint;
MPRINT(EMADVISECOLUMNS):    proc contents data=SAMPSIO.HMEQ out=WORK.M1OIXORQ noprint;
17033      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 数据集 WORK.M1OIXORQ 有 13 个观测和 41 个变量。
NOTE: “PROCEDURE CONTENTS”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
17034      data WORK.M1OIXORQ;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OIXORQ;
17035      length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
17036      label NAME =;
MPRINT(EMADVISECOLUMNS):   label NAME =;
17037      set WORK.M1OIXORQ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   set WORK.M1OIXORQ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
17038      if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
17039      else type = 'C';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
17040      if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
17041      if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
17042      else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
17043      end;
MPRINT(EMADVISECOLUMNS):   end;
17044      else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
17045      if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
17046      if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
17047      else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
17048      end;
MPRINT(EMADVISECOLUMNS):   end;
17049      else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
17050      if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
17051      else index = "Y";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
17052      indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
17053      drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
17054      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 从数据集 WORK.M1OIXORQ. 读取了 13 个观测
NOTE: 数据集 WORK.M1OIXORQ 有 13 个观测和 8 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17055      data WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PNL4OU;
17056      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
17057      set WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PNL4OU;
17058      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
17059      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 从数据集 WORK.M3PNL4OU. 读取了 13 个观测
NOTE: 数据集 WORK.M3PNL4OU 有 13 个观测和 22 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17060      data WORK.M1OIXORQ;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OIXORQ;
17061      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
17062      set WORK.M1OIXORQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OIXORQ;
17063      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
17064      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 从数据集 WORK.M1OIXORQ. 读取了 13 个观测
NOTE: 数据集 WORK.M1OIXORQ 有 13 个观测和 9 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1OIXORQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort data=WORK.M3PNL4OU NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   data WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):   merge WORK.M3PNL4OU(in=_a) WORK.M1OIXORQ(in=_b);
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   if _a and ^_b then delete;
MPRINT(EMADVISECOLUMNS):   run;
17076      data WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PNL4OU;
17077      drop UNAME;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
17078      set WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PNL4OU;
17079      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 从数据集 WORK.M3PNL4OU. 读取了 13 个观测
NOTE: 数据集 WORK.M3PNL4OU 有 13 个观测和 21 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
MPRINT(EMADVISECOLUMNS):    data WORK.M1L90MXQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):   set WORK.M3PNL4OU;
MPRINT(EMADVISECOLUMNS):   label NAME = "变量名称" TYPE = "类型" ROLE = "角色" LEVEL= "测度水平" ORDER= "顺序" CREATOR= "创建者" FORMATTYPE= "格式类型" FAMILY= "系列" DISTRIBUTION= "分布" PRICE= "价格" LOWERLIMIT= "下限" UPPERLIMIT= "上限" REPORT= "报表"
COMMENT= "注释" INDEX= "索引" INDEXTYPE= "索引类型" LABEL= "标签" LENGTH= "长度";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
NOTE: “PROCEDURE DISPLAY”所用时间（总处理时间）:
      实际时间          0.29 秒
      CPU 时间          0.12 秒
 
 
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
 
17322      %EmAdviseTable(SAMPSIO.HMEQ, outdata=EMWS1.Ids_EMTMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):
MPRINT(EMADVISETABLE):   proc display c=sashelp.emmeta.advisetable.scl;
MPRINT(EMADVISETABLE):   run;
 
17323      %let SYSCC = 0;
17324      data EMWS1.Ids_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):    data EMWS1.Ids_EMTMETADEFAULT;
17325      set EMWS1.Ids_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):   set EMWS1.Ids_EMTMETADEFAULT;
17326      length LIBNAME $8;
MPRINT(EMADVISETABLE):   length LIBNAME $8;
17327      LIBNAME = "SAMPSIO";
MPRINT(EMADVISETABLE):   LIBNAME = "SAMPSIO";
17328      run;
MPRINT(EMADVISETABLE):   run;
 
NOTE: 从数据集 EMWS1.IDS_EMTMETADEFAULT. 读取了 1 个观测
NOTE: 数据集 EMWS1.IDS_EMTMETADEFAULT 有 1 个观测和 15 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
MPRINT(EMADVISETABLE):    data _null_;
MPRINT(EMADVISETABLE):   dsid = open("SAMPSIO.HMEQ");
MPRINT(EMADVISETABLE):   call symput("_DSID", put(dsid,BEST.));
MPRINT(EMADVISETABLE):   if dsid > 0 then dsid = close(dsid);
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):    ods output enginehost=em_tablehost;
MPRINT(EMADVISETABLE):   ods listing close;
MPRINT(EMADVISETABLE):   proc contents data=SAMPSIO.HMEQ;
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):   ods listing;
MPRINT(EMADVISETABLE):    data WORK.M1EZP35W;
MPRINT(EMADVISETABLE):   length MEMNAME $ 32 MEMTYPE $ 8 MEMLABEL $ 256 TYPEMEM $ 8 ENGINE $ 8 CRDATE 8 MODATE 8 NOBS 8 NCOLS 8 NBYTES 8 ROLE $ 20 USEEXTERNALDATA $1 SAMPLINGRATE 8 SEGMENT $ 20;
MPRINT(EMADVISETABLE):   set WORK.M1EZP35W(obs=1);
MPRINT(EMADVISETABLE):   nobs = 5960;
MPRINT(EMADVISETABLE):   ncols = 13;
MPRINT(EMADVISETABLE):   nbytes = 656384;
MPRINT(EMADVISETABLE):   memname = "HMEQ";
MPRINT(EMADVISETABLE):   memtype = "DATA    ";
MPRINT(EMADVISETABLE):   memlabel = "";
MPRINT(EMADVISETABLE):   typemem = "DATA    ";
MPRINT(EMADVISETABLE):   engine = "V9      ";
MPRINT(EMADVISETABLE):   crdate = 1709070775.072;
MPRINT(EMADVISETABLE):   modate = 1709070775.072;
MPRINT(EMADVISETABLE):   format crdate datetime16.;
MPRINT(EMADVISETABLE):   format modate datetime16.;
MPRINT(EMADVISETABLE):   if role = ' ' then role = 'TRAIN';
MPRINT(EMADVISETABLE):   output;
MPRINT(EMADVISETABLE):   run;
NOTE: “PROCEDURE DISPLAY”所用时间（总处理时间）:
      实际时间          0.09 秒
      CPU 时间          0.03 秒
 
 
MPRINT(EMADVISETABLE):
MPRINT(EM_DIAGRAM):  ;
 
17357      data EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_EMCMETADEFAULT;
17358      set EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMCMETADEFAULT;
17359      label DROP = "%sysfunc(sasmsg(sashelp.dmine, meta_drop_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DROP = "删除";
17360      if DROP='' then DROP='N';
MPRINT(EM_DIAGRAM):   if DROP='' then DROP='N';
17361      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
17362      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
17363      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_EMCMETADEFAULT. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_EMCMETADEFAULT 有 13 个观测和 21 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17364      proc sort data=EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Ids_EMCMETADEFAULT;
17365      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17366      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_EMCMETADEFAULT. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_EMCMETADEFAULT 有 13 个观测和 21 个变量。
NOTE: “PROCEDURE SORT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
17367      proc sort data=EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_VariableSet;
17368      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17369      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_VARIABLESET. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_VARIABLESET 有 13 个观测和 21 个变量。
NOTE: “PROCEDURE SORT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17370      data EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS1.Ids_VariableSet;
17371      merge EMWS1.Ids_EMCMETADEFAULT(in=_a) EMWS1.Ids_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS1.Ids_EMCMETADEFAULT(in=_a) EMWS1.Ids_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
17372      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17373      if ^_a and _b then delete;
MPRINT(EM_DIAGRAM):   if ^_a and _b then delete;
17374      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
17375      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
17376      if (type ne oldtype) and (_a and _b) then do;
MPRINT(EM_DIAGRAM):   if (type ne oldtype) and (_a and _b) then do;
17377      if type ='N' then level='INTERVAL';
MPRINT(EM_DIAGRAM):   if type ='N' then level='INTERVAL';
17378      end;
MPRINT(EM_DIAGRAM):   end;
17379      drop oldtype;
MPRINT(EM_DIAGRAM):   drop oldtype;
17380      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_EMCMETADEFAULT. 读取了 13 个观测
NOTE: 从数据集 EMWS1.IDS_VARIABLESET. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_VARIABLESET 有 13 个观测和 21 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17381      data EMWS1.Ids_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_CMeta_DATA;
17382      set WORK.M36T3KMJ;
MPRINT(EM_DIAGRAM):   set WORK.M36T3KMJ;
17383      drop DROP;
MPRINT(EM_DIAGRAM):   drop DROP;
17384      where DROP='N';
MPRINT(EM_DIAGRAM):   where DROP='N';
17385      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 WORK.M36T3KMJ. 读取了 13 个观测
      WHERE DROP='N';
NOTE: 数据集 EMWS1.IDS_CMETA_DATA 有 13 个观测和 20 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
*------------------------------------------------------------*
Ids: 使用“SAMPSIO.HMEQ”数据源
*------------------------------------------------------------*
17386      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
17387      * Ids: 正在创建“DATA”数据;
MPRINT(EM_DIAGRAM):   * Ids: 正在创建“DATA”数据;
17388      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17389      data EMWS1.Ids_DATA (label="")
17390      / view=EMWS1.Ids_DATA
17391      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Ids_DATA (label="") / view=EMWS1.Ids_DATA ;
17392      set SAMPSIO.HMEQ;
MPRINT(EM_DIAGRAM):   set SAMPSIO.HMEQ;
17393      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP 视图已保存在文件 EMWS1.IDS_DATA 中。
NOTE: 存储的 DATA STEP 视图无法在不同的操作系统下运行。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17394      data WORK.IDSOUTPUT;
MPRINT(EM_DIAGRAM):    data WORK.IDSOUTPUT;
17395      length ATTRIBUTE $20 LABEL $50 VALUE $50;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $50;
17396      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "属性";
17397      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "值";
17398      ATTRIBUTE = 'OUTPUT';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUT';
17399      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutput_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "输出表";
17400      VALUE = "EMWS1.Ids_DATA";
MPRINT(EM_DIAGRAM):   VALUE = "EMWS1.Ids_DATA";
17401      output;
MPRINT(EM_DIAGRAM):   output;
17402      ATTRIBUTE = 'OUTPUTTYPE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUTTYPE';
17403      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutputtype_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "输出类型";
17404      VALUE = "视图";
MPRINT(EM_DIAGRAM):   VALUE = "视图";
17405      output;
MPRINT(EM_DIAGRAM):   output;
17406      ATTRIBUTE = 'DROPVARS';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DROPVARS';
17407      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeldropvars_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "删除的变量";
17408      VALUE = "0";
MPRINT(EM_DIAGRAM):   VALUE = "0";
17409      output;
MPRINT(EM_DIAGRAM):   output;
17410      ATTRIBUTE = 'ROLE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'ROLE';
17411      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelrole_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "数据挖掘角色";
17412      VALUE = "训练";
MPRINT(EM_DIAGRAM):   VALUE = "训练";
17413      output;
MPRINT(EM_DIAGRAM):   output;
17414      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 数据集 WORK.IDSOUTPUT 有 4 个观测和 3 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
17415      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
17416      var label value;
MPRINT(EM_DIAGRAM):   var label value;
17417      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
17418      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_outTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "输出表属性";
MPRINT(EM_DIAGRAM):   run;
17419      run;
 
NOTE: 从数据集 WORK.IDSOUTPUT. 读取了 4 个观测
NOTE: PROCEDURE PRINT 已打印第 2 页。
NOTE: “PROCEDURE PRINT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17420      title10;
MPRINT(EM_DIAGRAM):   title10;
17421      proc contents noprint data=SAMPSIO.HMEQ out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
MPRINT(EM_DIAGRAM):    proc contents noprint data=SAMPSIO.HMEQ out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
17422      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 数据集 WORK.IDSCONTENT 有 13 个观测和 28 个变量。
NOTE: “PROCEDURE CONTENTS”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
17423      data WORK.IDSCONTENT;
MPRINT(EM_DIAGRAM):   data WORK.IDSCONTENT;
17424      set WORK.IDSCONTENT end=eof;
MPRINT(EM_DIAGRAM):   set WORK.IDSCONTENT end=eof;
17425      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
17426      NVARS = _n_;
MPRINT(EM_DIAGRAM):   NVARS = _n_;
17427      output;
MPRINT(EM_DIAGRAM):   output;
17428      end;
MPRINT(EM_DIAGRAM):   end;
17429      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 WORK.IDSCONTENT. 读取了 13 个观测
NOTE: 数据集 WORK.IDSCONTENT 有 1 个观测和 29 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17430      data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
MPRINT(EM_DIAGRAM):   data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
17431      length ATTRIBUTE $20 LABEL $50 VALUE $80;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $80;
17432      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "属性";
17433      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "值";
17434      ;
MPRINT(EM_DIAGRAM):   ;
17435      dsid = open("WORK.IDSCONTENT");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.IDSCONTENT");
17436      rc = fetch(dsid);
MPRINT(EM_DIAGRAM):   rc = fetch(dsid);
17437      nvars = attrn(dsid, 'NVARS');
MPRINT(EM_DIAGRAM):   nvars = attrn(dsid, 'NVARS');
17438      nobs = attrn(dsid, 'NOBS');
MPRINT(EM_DIAGRAM):   nobs = attrn(dsid, 'NOBS');
17439      ATTRIBUTE = 'DATASOURCE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DATASOURCE';
17440      LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_datasource_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "数据源";
17441      VALUE="hmeq";
MPRINT(EM_DIAGRAM):   VALUE="hmeq";
17442      output;
MPRINT(EM_DIAGRAM):   output;
17443      ATTRIBUTE = '';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = '';
17444      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
17445      VALUE='';
MPRINT(EM_DIAGRAM):   VALUE='';
17446      output;
MPRINT(EM_DIAGRAM):   output;
17447      do i=1 to nvars;
MPRINT(EM_DIAGRAM):   do i=1 to nvars;
17448      ATTRIBUTE = varname(dsid, i);
MPRINT(EM_DIAGRAM):   ATTRIBUTE = varname(dsid, i);
17449      LABEL = varlabel(dsid, i);
MPRINT(EM_DIAGRAM):   LABEL = varlabel(dsid, i);
17450      if vartype(dsid,i)='C' then do;
MPRINT(EM_DIAGRAM):   if vartype(dsid,i)='C' then do;
17451      VALUE = getvarc(dsid, i);
MPRINT(EM_DIAGRAM):   VALUE = getvarc(dsid, i);
17452      end;
MPRINT(EM_DIAGRAM):   end;
17453      else do;
MPRINT(EM_DIAGRAM):   else do;
17454      NVALUE = getvarn(dsid, i);
MPRINT(EM_DIAGRAM):   NVALUE = getvarn(dsid, i);
17455      if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
MPRINT(EM_DIAGRAM):   if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
17456      else VALUE = left(put(NVALUE, BEST12.));
MPRINT(EM_DIAGRAM):   else VALUE = left(put(NVALUE, BEST12.));
17457      end;
MPRINT(EM_DIAGRAM):   end;
17458      if ATTRIBUTE = 'NVARS' then do;
MPRINT(EM_DIAGRAM):   if ATTRIBUTE = 'NVARS' then do;
17459      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelvariables_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "变量";
17460      end;
MPRINT(EM_DIAGRAM):   end;
17461      output;
MPRINT(EM_DIAGRAM):   output;
17462      end;
MPRINT(EM_DIAGRAM):   end;
17463      dsid=close(dsid);
MPRINT(EM_DIAGRAM):   dsid=close(dsid);
17464      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 数据集 WORK.IDSOUTPUT 有 31 个观测和 3 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
17465      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
17466      var label value;
MPRINT(EM_DIAGRAM):   var label value;
17467      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
17468      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_inTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "输入表属性";
MPRINT(EM_DIAGRAM):   run;
17469      run;
 
NOTE: 从数据集 WORK.IDSOUTPUT. 读取了 31 个观测
NOTE: PROCEDURE PRINT 已打印第 3 页。
NOTE: “PROCEDURE PRINT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
MPRINT(EM_DIAGRAM):    proc dmdb data=SAMPSIO.HMEQ maxlevel=32 classOut=WORK._IDS_DMDBClass ;
MPRINT(EM_DIAGRAM):   class "BAD"n (DESC) ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._IDS_DMDBClass;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M138AZYI;
MPRINT(EM_DIAGRAM):   set WORK.M138AZYI;
MPRINT(EM_DIAGRAM):   where ROLE = 'FREQ' or NAME = "BAD";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._IDS_DMDBClass end=eof;
MPRINT(EM_DIAGRAM):   where NAME="BAD" and strip(LEVEL) ^in('', '.');
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   call execute("data WORK_TPTRAIN;");
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   call execute("BAD"!!'='!!strip(put(NRAW, best.))!!'; output;');
MPRINT(EM_DIAGRAM):   if eof then do;
MPRINT(EM_DIAGRAM):   call execute('run;');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK_TPTRAIN;
MPRINT(EM_DIAGRAM):   BAD=1;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   BAD=0;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
WORK_TPTRAIN WORK.WORK_TPTRAIN
WORK_TPTRAIN WORK.WORK_TPTRAIN WORK WORK_TPTRAIN
WORK.WORK_TPTRAIN WORK.WORK_TPTRAIN
WORK.WORK_TPTRAIN WORK.WORK_TPTRAIN WORK WORK_TPTRAIN
>>>>>>>>>>>>>> TARGET(   NAME='BAD'
                         ROLE='TARGET'
                         LEVEL='BINARY'
                         ORDER=''
                         CREATOR=''
                         FORMATTYPE=''
                         FAMILY=''
                         LOWERLIMIT=.
                         UPPERLIMIT=.
                         REPORT='N'
                         DISTRIBUTION=''
                         COMMENT=''
                         PRICE=.
                         TYPE='N'
                         LABEL=''
                         FORMAT=''
                         INFORMAT=''
                         INDEX='N'
                         INDEXTYPE='NONE'
                         LENGTH=8
                         DROP='N'
                      )[14757]
MPRINT(EM_DIAGRAM):
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.WORK_TPTRAIN dmdbcat=WORK.EM_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   BAD(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   target BAD ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
WORK.EM_DMDB WORK.EM_DMDB
WORK.EM_DMDB WORK.EM_DMDB WORK EM_DMDB
MPRINT(EM_DIAGRAM):    proc datasets lib=EMWS1 nolist;
MPRINT(EM_DIAGRAM):   modify Ids_BAD_DD(type=PROFIT label= BAD);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data _classPercent;
MPRINT(EM_DIAGRAM):   set WORK._IDS_DMDBClass end=eof;
MPRINT(EM_DIAGRAM):   where NAME="BAD" and LEVEL ^in('', '.');
MPRINT(EM_DIAGRAM):   Keep LEVEL FREQUENCY NMISSPERCENT TRAINPRIOR;
MPRINT(EM_DIAGRAM):   NMISSPERCENT = NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=NMISSPERCENT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_classPercent(rename=(LEVEL=BAD NMISSPERCENT=DATAPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by BAD;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Ids_BAD_DD;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_BAD_DD;
MPRINT(EM_DIAGRAM):   _sortOrder = _N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_BAD_DD;
MPRINT(EM_DIAGRAM):   by BAD;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Ids_BAD_DD;
MPRINT(EM_DIAGRAM):   merge EMWS1.Ids_BAD_DD _classPercent;
MPRINT(EM_DIAGRAM):   by BAD;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_BAD_DD out=EMWS1.Ids_BAD_DD(drop=_sortOrder);
MPRINT(EM_DIAGRAM):   by _sortOrder;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2019年08月25日" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17时36分02秒" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 评分日志";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 评分日志
日期:       2019年08月25日
时间:       17时36分02秒
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O36Y1PLT "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O36Y1PLT new;
MPRINT(EM_DIAGRAM):   run;
17654      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
17655      * Ids: Computing metadata for DATA data;
MPRINT(EM_DIAGRAM):   * Ids: Computing metadata for DATA data;
17656      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: “视图 EMWS1.IDS_DATA.VIEW”所用时间（总处理时间）:
      实际时间          0.02 秒
      CPU 时间          0.03 秒
 
17657      data EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_EMINFO;
17658      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
17659      TARGET="";
MPRINT(EM_DIAGRAM):   TARGET="";
17660      KEY="IDSTABLE";
MPRINT(EM_DIAGRAM):   KEY="IDSTABLE";
17661      DATA="SAMPSIO.HMEQ";
MPRINT(EM_DIAGRAM):   DATA="SAMPSIO.HMEQ";
17662      output;
MPRINT(EM_DIAGRAM):   output;
17663      TARGET="BAD";
MPRINT(EM_DIAGRAM):   TARGET="BAD";
17664      KEY="DECDATA";
MPRINT(EM_DIAGRAM):   KEY="DECDATA";
17665      DATA="EMWS1.Ids_BAD_DD";
MPRINT(EM_DIAGRAM):   DATA="EMWS1.Ids_BAD_DD";
17666      output;
MPRINT(EM_DIAGRAM):   output;
17667      TARGET="BAD";
MPRINT(EM_DIAGRAM):   TARGET="BAD";
17668      KEY="DECMETA";
MPRINT(EM_DIAGRAM):   KEY="DECMETA";
17669      DATA="EMWS1.Ids_BAD_DM";
MPRINT(EM_DIAGRAM):   DATA="EMWS1.Ids_BAD_DM";
17670      output;
MPRINT(EM_DIAGRAM):   output;
17671      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 数据集 EMWS1.IDS_EMINFO 有 3 个观测和 3 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
NOTE: “视图 EMWS1.IDS_DATA.VIEW”所用时间（总处理时间）:
      实际时间          0.02 秒
      CPU 时间          0.01 秒
 
17672      data EMWS1.Ids_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_CMeta_DATA;
17673      set EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_VariableSet;
17674      drop DROP;
MPRINT(EM_DIAGRAM):   drop DROP;
17675      where DROP='N';
MPRINT(EM_DIAGRAM):   where DROP='N';
17676      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_VARIABLESET. 读取了 13 个观测
      WHERE DROP='N';
NOTE: 数据集 EMWS1.IDS_CMETA_DATA 有 13 个观测和 20 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2019年08月25日" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17时36分02秒" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 报表日志";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 报表日志
日期:       2019年08月25日
时间:       17时36分02秒
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0GPQ0KS "D:\git\notebooks\5. data analysis\1. sas\sas em\CaseStudy\My Project\Workspaces\EMWS1\Ids\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0GPQ0KS new;
MPRINT(EM_DIAGRAM):   run;
17700      %EmAdviseStat(EMWS1.Ids_DATA, maxClassLevels=20, metadata=EMWS1.Ids_CMeta_DATA, statisticData=EMWS1.Ids_EMSTAT);
MPRINT(EM_DIAGRAM):
MPRINT(EMADVISESTAT):   proc display c=sashelp.emmeta.advisestatistics.scl;
MPRINT(EMADVISESTAT):   run;
 
17701      %let SYSCC = 0;
*------------------------------------------------------------*
Computing data source summary statistics
*------------------------------------------------------------*
NOTE: “视图 EMWS1.IDS_DATA.VIEW”所用时间（总处理时间）:
      实际时间          0.02 秒
      CPU 时间          0.01 秒
 
17702      %let EM_ADVISENCOUNT = -1;
NOTE: “视图 EMWS1.IDS_DATA.VIEW”所用时间（总处理时间）:
      实际时间          0.02 秒
      CPU 时间          0.03 秒
 
17703      %let _GridFlag = 0;
17704      %hpdm_performance(data=EMWS1.Ids_DATA, isGrid=_GridFlag);
MPRINT(EMADVISESTAT):
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EMADVISESTAT):  ;
17705      proc dmdb data=EMWS1.Ids_DATA(obs=1000000)
17706      maxlevel = 513
17707      classout=WORK._CLASSSTAT varout=WORK._VARSTAT;
MPRINT(EMADVISESTAT):    proc dmdb data=EMWS1.Ids_DATA(obs=1000000) maxlevel = 513 classout=WORK._CLASSSTAT varout=WORK._VARSTAT;
17708      var
17709      'CLAGE'n
17710      'CLNO'n
17711      'DEBTINC'n
17712      'DELINQ'n
17713      'DEROG'n
17714      'LOAN'n
17715      'MORTDUE'n
17716      'NINQ'n
17717      'VALUE'n
17718      'YOJ'n
17719      ;
MPRINT(EMADVISESTAT):   var 'CLAGE'n 'CLNO'n 'DEBTINC'n 'DELINQ'n 'DEROG'n 'LOAN'n 'MORTDUE'n 'NINQ'n 'VALUE'n 'YOJ'n ;
17720      class
17721      'BAD'n
17722      'JOB'n
17723      'REASON'n
17724      ;
MPRINT(EMADVISESTAT):   class 'BAD'n 'JOB'n 'REASON'n ;
17725      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: Records processed = 5960   Memory used = 511K.
NOTE: “视图 EMWS1.IDS_DATA.VIEW”所用时间（总处理时间）:
      实际时间          0.02 秒
      CPU 时间          0.01 秒
 
NOTE: 从数据集 SAMPSIO.HMEQ. 读取了 5960 个观测
NOTE: 从数据集 EMWS1.IDS_DATA. 读取了 5960 个观测
NOTE: 数据集 WORK._CLASSSTAT 有 12 个观测和 9 个变量。
NOTE: 数据集 WORK._VARSTAT 有 10 个观测和 9 个变量。
NOTE: “PROCEDURE DMDB”所用时间（总处理时间）:
      实际时间          0.03 秒
      CPU 时间          0.03 秒
 
 
17726      proc sort data=WORK._CLASSSTAT;
MPRINT(EMADVISESTAT):    proc sort data=WORK._CLASSSTAT;
17727      by NAME;
MPRINT(EMADVISESTAT):   by NAME;
17728      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: 从数据集 WORK._CLASSSTAT. 读取了 12 个观测
NOTE: 数据集 WORK._CLASSSTAT 有 12 个观测和 9 个变量。
NOTE: “PROCEDURE SORT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17729      data WORK._CLASSSTAT;
MPRINT(EMADVISESTAT):   data WORK._CLASSSTAT;
17730      set WORK._CLASSSTAT end=eof;
MPRINT(EMADVISESTAT):   set WORK._CLASSSTAT end=eof;
17731      retain NLEVEL PCTMISS NTOTAL 0;
MPRINT(EMADVISESTAT):   retain NLEVEL PCTMISS NTOTAL 0;
17732      KEEP NAME TYPE NLEVEL PCTMISS;
MPRINT(EMADVISESTAT):   KEEP NAME TYPE NLEVEL PCTMISS;
17733      by NAME;
MPRINT(EMADVISESTAT):   by NAME;
17734      if first.NAME then do;
MPRINT(EMADVISESTAT):   if first.NAME then do;
17735      NTOTAL = frequency;
MPRINT(EMADVISESTAT):   NTOTAL = frequency;
17736      if LEVEL in('', '.') and CRAW eq '' and NRAW=. then do;
MPRINT(EMADVISESTAT):   if LEVEL in('', '.') and CRAW eq '' and NRAW=. then do;
17737      PCTMISS=FREQPERCENT;
MPRINT(EMADVISESTAT):   PCTMISS=FREQPERCENT;
17738      NLEVEL = 0;
MPRINT(EMADVISESTAT):   NLEVEL = 0;
17739      end;
MPRINT(EMADVISESTAT):   end;
17740      else do;
MPRINT(EMADVISESTAT):   else do;
17741      NLEVEL=1;
MPRINT(EMADVISESTAT):   NLEVEL=1;
17742      PCTMISS=0;
MPRINT(EMADVISESTAT):   PCTMISS=0;
17743      end;
MPRINT(EMADVISESTAT):   end;
17744      end;
MPRINT(EMADVISESTAT):   end;
17745      else do;
MPRINT(EMADVISESTAT):   else do;
17746      NLEVEL + 1;
MPRINT(EMADVISESTAT):   NLEVEL + 1;
17747      NTOTAL + FREQUENCY;
MPRINT(EMADVISESTAT):   NTOTAL + FREQUENCY;
17748      end;
MPRINT(EMADVISESTAT):   end;
17749      if last.NAME then do;
MPRINT(EMADVISESTAT):   if last.NAME then do;
17750      if eof then call symput('EM_ADVISENCOUNT', strip(put(ntotal, best.)));
MPRINT(EMADVISESTAT):   if eof then call symput('EM_ADVISENCOUNT', strip(put(ntotal, best.)));
17751      output;
MPRINT(EMADVISESTAT):   output;
17752      end;
MPRINT(EMADVISESTAT):   end;
17753      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: 从数据集 WORK._CLASSSTAT. 读取了 12 个观测
NOTE: 数据集 WORK._CLASSSTAT 有 3 个观测和 4 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17754      data WORK._VARSTAT;
MPRINT(EMADVISESTAT):    data WORK._VARSTAT;
17755      set WORK._VARSTAT end=eof;
MPRINT(EMADVISESTAT):   set WORK._VARSTAT end=eof;
17756      retain TYPE 'N';
MPRINT(EMADVISESTAT):   retain TYPE 'N';
17757      PCTMISS = 100*NMISS/(NMISS + N);
MPRINT(EMADVISESTAT):   PCTMISS = 100*NMISS/(NMISS + N);
17758      drop N
17759      ;
MPRINT(EMADVISESTAT):   drop N ;
17760      if eof then call symput('EM_ADVISENCOUNT', strip(put(nmiss + n, best.)));
MPRINT(EMADVISESTAT):   if eof then call symput('EM_ADVISENCOUNT', strip(put(nmiss + n, best.)));
17761      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: 从数据集 WORK._VARSTAT. 读取了 10 个观测
NOTE: 数据集 WORK._VARSTAT 有 10 个观测和 10 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17762      data EMWS1.Ids_EMSTAT;
MPRINT(EMADVISESTAT):    data EMWS1.Ids_EMSTAT;
17763      length Name $32 Type $1 nlevel pctmiss min max mean std skewness kurtosis 8;
MPRINT(EMADVISESTAT):   length Name $32 Type $1 nlevel pctmiss min max mean std skewness kurtosis 8;
17764      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))" NLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))" PCTMISS =
17765         "%sysfunc(sasmsg(sashelp.dmine, rpt_pctmissing_vlabel, NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))" MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))" MEAN =
17766         "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))" SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))" KURTOSIS =
17767         "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EMADVISESTAT):   label NAME = "变量名称" TYPE = "类型" NLEVEL = "水平数" PCTMISS = "缺失值百分比" MIN = "最小值" MAX = "最大值" MEAN = "均值" STD = "标准差" SKEWNESS = "偏度" KURTOSIS = "峰度";
17768      format NLEVEL 6.0 PCTMISS MIN MAX MEAN STD SKEWNESS KURTOSIS BEST8.3;
MPRINT(EMADVISESTAT):   format NLEVEL 6.0 PCTMISS MIN MAX MEAN STD SKEWNESS KURTOSIS BEST8.3;
17769      set WORK._VARSTAT WORK._CLASSSTAT;
MPRINT(EMADVISESTAT):   set WORK._VARSTAT WORK._CLASSSTAT;
17770      drop NMISS;
MPRINT(EMADVISESTAT):   drop NMISS;
17771      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: 从数据集 WORK._VARSTAT. 读取了 10 个观测
NOTE: 从数据集 WORK._CLASSSTAT. 读取了 3 个观测
NOTE: 数据集 EMWS1.IDS_EMSTAT 有 13 个观测和 10 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.01 秒
      CPU 时间          0.01 秒
 
 
17772      proc sort data=EMWS1.Ids_EMSTAT;
MPRINT(EMADVISESTAT):   proc sort data=EMWS1.Ids_EMSTAT;
17773      by NAME;
MPRINT(EMADVISESTAT):   by NAME;
17774      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: 从数据集 EMWS1.IDS_EMSTAT. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_EMSTAT 有 13 个观测和 10 个变量。
NOTE: “PROCEDURE SORT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17775      proc sort data=WORK.M1PJ3S6Z;
MPRINT(EMADVISESTAT):    proc sort data=WORK.M1PJ3S6Z;
17776      by NAME;
MPRINT(EMADVISESTAT):   by NAME;
17777      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: 从数据集 WORK.M1PJ3S6Z. 读取了 13 个观测
NOTE: 数据集 WORK.M1PJ3S6Z 有 13 个观测和 20 个变量。
NOTE: “PROCEDURE SORT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17778      data WORK.M1PJ3S6Z;
MPRINT(EMADVISESTAT):   data WORK.M1PJ3S6Z;
17779      merge WORK.M1PJ3S6Z EMWS1.Ids_EMSTAT;
MPRINT(EMADVISESTAT):   merge WORK.M1PJ3S6Z EMWS1.Ids_EMSTAT;
17780      by NAME;
MPRINT(EMADVISESTAT):   by NAME;
17781      if FORMATTYPE in("DATE", "DATETIME", "TIME") then do;
MPRINT(EMADVISESTAT):   if FORMATTYPE in("DATE", "DATETIME", "TIME") then do;
17782      MEAN=.;
MPRINT(EMADVISESTAT):   MEAN=.;
17783      MIN=.;
MPRINT(EMADVISESTAT):   MIN=.;
17784      MAX=.;
MPRINT(EMADVISESTAT):   MAX=.;
17785      STD=.;
MPRINT(EMADVISESTAT):   STD=.;
17786      SKEWNESS=.;
MPRINT(EMADVISESTAT):   SKEWNESS=.;
17787      KURTOSIS=.;
MPRINT(EMADVISESTAT):   KURTOSIS=.;
17788      end;
MPRINT(EMADVISESTAT):   end;
17789      else if ROLE = 'ID' then do;
MPRINT(EMADVISESTAT):   else if ROLE = 'ID' then do;
17790      MEAN=.;
MPRINT(EMADVISESTAT):   MEAN=.;
17791      STD=.;
MPRINT(EMADVISESTAT):   STD=.;
17792      SKEWNESS=.;
MPRINT(EMADVISESTAT):   SKEWNESS=.;
17793      KURTOSIS=.;
MPRINT(EMADVISESTAT):   KURTOSIS=.;
17794      end;
MPRINT(EMADVISESTAT):   end;
17795      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: 从数据集 WORK.M1PJ3S6Z. 读取了 13 个观测
NOTE: 从数据集 EMWS1.IDS_EMSTAT. 读取了 13 个观测
NOTE: 数据集 WORK.M1PJ3S6Z 有 13 个观测和 28 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
17796      data EMWS1.Ids_CMeta_DATA;
MPRINT(EMADVISESTAT):    data EMWS1.Ids_CMeta_DATA;
17797      set WORK.M1PJ3S6Z;
MPRINT(EMADVISESTAT):   set WORK.M1PJ3S6Z;
17798      run;
MPRINT(EMADVISESTAT):   run;
 
NOTE: 从数据集 WORK.M1PJ3S6Z. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_CMETA_DATA 有 13 个观测和 28 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
NOTE: “PROCEDURE DISPLAY”所用时间（总处理时间）:
      实际时间          0.48 秒
      CPU 时间          0.21 秒
 
 
MPRINT(EMADVISESTAT):
MPRINT(EM_DIAGRAM):  ;
17799      proc sort data=EMWS1.Ids_EMSTAT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_EMSTAT;
17800      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17801      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 输入数据集已排序，故未进行排序。
NOTE: “PROCEDURE SORT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17802      proc sort data=EMWS1.Ids_CMeta_DATA;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_CMeta_DATA;
17803      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17804      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_CMETA_DATA. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_CMETA_DATA 有 13 个观测和 28 个变量。
NOTE: “PROCEDURE SORT”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17805      data EMWS1.Ids_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_CMeta_DATA;
17806      set EMWS1.Ids_CMeta_DATA;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_CMeta_DATA;
17807      drop nlevel pctmiss min max mean std skewness kurtosis;
MPRINT(EM_DIAGRAM):   drop nlevel pctmiss min max mean std skewness kurtosis;
17808      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_CMETA_DATA. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_CMETA_DATA 有 13 个观测和 20 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.00 秒
 
 
17809      data EMWS1.Ids_EMSTAT;
MPRINT(EM_DIAGRAM):   data EMWS1.Ids_EMSTAT;
17810      merge EMWS1.Ids_CMeta_DATA(keep=NAME TYPE LEVEL ROLE) EMWS1.Ids_EMSTAT;
MPRINT(EM_DIAGRAM):   merge EMWS1.Ids_CMeta_DATA(keep=NAME TYPE LEVEL ROLE) EMWS1.Ids_EMSTAT;
17811      label LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,     NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LEVEL = "测度水平" ROLE = "角色";
17812      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17813      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 从数据集 EMWS1.IDS_CMETA_DATA. 读取了 13 个观测
NOTE: 从数据集 EMWS1.IDS_EMSTAT. 读取了 13 个观测
NOTE: 数据集 EMWS1.IDS_EMSTAT 有 13 个观测和 12 个变量。
NOTE: “DATA 语句”所用时间（总处理时间）:
      实际时间          0.00 秒
      CPU 时间          0.01 秒
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
